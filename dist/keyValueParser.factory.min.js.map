{"version":3,"sources":["keyValueParser.factory.min.js"],"names":["keyValueParserFactory","$parse","parse","data","model","console","log","outputs","modelId","output","parseByKey","key","modelKey","value","push","factory","angular","module","$inject"],"mappings":"AAGA,QAASA,uBAAuBC,GAO9B,QAASC,GAAOC,EAAKC,GACnBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,EAEZ,IAAIG,KAEJ,KAAK,GAAIC,KAAWJ,GAAM,CAExB,GAAIK,MACAC,EAAaT,EAAOG,EAAMI,GAASG,IAEvC,KAAK,GAAIC,KAAYR,GAAMI,GAER,QAAbI,EAEFH,EAAOI,MAAQH,EAAWP,GAI1BM,EAAOG,GAAYR,EAAMI,GAASI,EAMtCL,GAAQO,KAAKL,GAIf,MADAJ,SAAQC,IAAIC,GACLA,EAnCT,GAAIQ,KAIJ,OAFAA,GAAQb,MAAQA,EAETa,EARTC,QAAQC,OAAO,6BACdF,QAAQ,wBAAwBf,uBAyCjCA,sBAAsBkB,SAAW","file":"keyValueParser.factory.min.js","sourcesContent":["angular.module('keyValueParser.factory', [])\n.factory('keyValueParserFactory',keyValueParserFactory);\n\nfunction keyValueParserFactory ($parse){\n  var factory = {};\n  \n  factory.parse = parse;\n  \n  return factory;\n  \n  function parse (data,model) {\n    console.log(data);\n    console.log(model)\n    \n    var outputs = [];\n    \n    for (var modelId in model){\n      \n      var output = {};\n      var parseByKey = $parse(model[modelId].key);\n      \n      for (var modelKey in model[modelId]){\n        \n        if (modelKey === 'key'){\n          \n          output.value = parseByKey(data);\n          \n        } else {\n          \n          output[modelKey] = model[modelId][modelKey];\n          \n        }\n        \n      }\n      \n      outputs.push(output);\n      \n    }\n    console.log(outputs)\n    return outputs;\n  }\n}"],"sourceRoot":"/source/"}